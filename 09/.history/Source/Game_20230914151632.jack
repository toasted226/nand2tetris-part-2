class Game {
    field Player player;

    constructor Game new() {
        let player = Player.new(0, 0, 20, 1);
        return this;
    }

    method void run() {
        var int key, direction;
        var bool exit;
        let exit = false;

        // 0 = stationary
        // 1 = up
        // 2 = down
        // 3 = left
        // 4 = right
        let direction = 0;

        while(~exit) {
            let key = Keyboard.keyPressed();
            if (key = 0) { let direction = 0; } // no keypress
            if (key = 131) { let direction = 1; } // up
            if (key = 133) { let direction = 2; } // down
            if (key = 130) { let direction = 3; } // left
            if (key = 132) { let direction = 4; } // right
            if (key = 140) { let exit = true; } // esc

            do movePlayer(direction);
        }

        return;
    }

    /** Moves the player in the given direction */
    method void movePlayer(int direction) {
        var int newX, newY, speed;
        let newX = player.getX();
        let newY = player.getY();
        let speed = player.getSpeed();

        // Clear player at old position
        player.erase();

        // Check if the new position is within bounds
        if ((newX + speed) < 512 & (newY + speed) < 256) {
            if (direction = 1) { let newY = newY + speed; } // up
            if (direction = 2) { let newY = newY - speed; } // down
            if (direction = 3) { let newY = newX - speed; } // left
            if (direction = 4) { let newY = newX + speed; } // right
        }

        // Draw player at new position
        do player.draw();

        return;
    }

    method void dispose() {
        do player.dispose();
        do Memory.deAlloc(this);
        return;
    }
}
